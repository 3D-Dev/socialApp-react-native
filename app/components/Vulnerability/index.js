import React, { Component } from 'react';
import PropTypes from 'prop-types';
import { Row, Grid } from 'react-native-easy-grid';

import { SmallText, H4, MinimizedDropDown } from 'elements';

import MultiToggleSwitch from '../MultiToggleSwitch';

class Vulerability extends Component {
  static propTypes = {
    callback: PropTypes.func,
    defaultValue: PropTypes.number.isRequired
  };

  static contextTypes = {
    formatMessage: PropTypes.func,
    currentTheme: PropTypes.shape()
  };

  static defaultProps = {
    callback: () => {}
  };

  constructor(props) {
    super(props);
    this.state = {
      value: props.defaultValue
    };
  }

  onChangeValue = value => {
    this.setState({ value });
    const { callback } = this.props;
    callback(value);
  };

  render() {
    const { value } = this.state;
    const { formatMessage, currentTheme } = this.context;

    const MultiToggleSwitchItems = [];
    for (let i = 1; i < 5; i++) {
      MultiToggleSwitchItems.push(
        <MultiToggleSwitch.Item
          onPress={() => {
            this.onChangeValue(i);
          }}
          key={i}
        >
          <Grid>
            <Row style={{ alignItems: 'center', justifyContent: 'center' }}>
              <SmallText
                mb={0}
                align="center"
                color={i === value && currentTheme.COLORS.PRIMARY_BG}
              >
                {formatMessage(`vulnerability.textfor.${i}`)}
              </SmallText>
            </Row>
            <Row style={{ alignItems: 'center', justifyContent: 'center' }}>
              <H4
                mb={0}
                color={i === value && currentTheme.COLORS.PRIMARY_BG}
                align="center"
              >
                {i}
              </H4>
            </Row>
          </Grid>
        </MultiToggleSwitch.Item>
      );
    }

    return (
      <MinimizedDropDown
        minimized
        title={formatMessage('trustnetwork.vulnerability.title')}
        displayText={formatMessage('trustnetwork.vulnerability.displayText')}
      >
        <MultiToggleSwitch defaultActiveIndex={value - 1}>
          {MultiToggleSwitchItems}
        </MultiToggleSwitch>
      </MinimizedDropDown>
    );
  }
}

export default Vulerability;
